stages:
  - test

variables:
  APPLICATION_PATH: .
  UNIT_TEST_IMAGE: $CI_REGISTRY_IMAGE/ci_unit_test_image
  
# Coding Standard:
#   stage: test
#   image: composer
#   before_script:
#     - composer install
#   script:
#     - vendor/bin/phpcs src --report-junit=phpcs-test-results.xml
#   artifacts:
#     when: always
#     reports:
#       junit: phpcs-test-results.xml

Code Quality:
  stage: test
  image: overtrue/phplint:latest
  variables:
    INPUT_PATH: "./src"
    INPUT_OPTIONS: "-c .phplint.yml"
  script: /home/appuser/.composer/vendor/bin/phplint -c .phplint.yml
  artifacts:
    when: always
    reports:
      junit: phplint-test-results.xml

Static Analysis:
  stage: test
  image: composer
  before_script:
    - composer install
  script:
    - vendor/bin/phpstan analyse -c phpstan.neon --error-format=junit > phpstan-test-results.xml
  artifacts:
    when: always
    reports:
      junit: phpstan-test-results.xml

Unit Testing:
  stage: test
  image: $UNIT_TEST_IMAGE:latest
  variables:
    APPLICATION_PATH: tests/application
  before_script:
    - composer install
  script:
    - vendor/bin/phpunit
  artifacts:
    when: always
    reports:
      junit: phpunit-test-results.xml
